(this["webpackJsonpcopernicus-react-arcgis-map"]=this["webpackJsonpcopernicus-react-arcgis-map"]||[]).push([[16],{456:function(n,r,e){"use strict";e.d(r,"a",(function(){return L})),e.d(r,"b",(function(){return R})),e.d(r,"c",(function(){return S})),e.d(r,"d",(function(){return q})),e.d(r,"e",(function(){return B})),e.d(r,"f",(function(){return C})),e.d(r,"g",(function(){return k})),e.d(r,"h",(function(){return J})),e.d(r,"i",(function(){return _})),e.d(r,"j",(function(){return F})),e.d(r,"k",(function(){return G})),e.d(r,"l",(function(){return o})),e.d(r,"m",(function(){return f})),e.d(r,"n",(function(){return c})),e.d(r,"o",(function(){return a})),e.d(r,"p",(function(){return i})),e.d(r,"q",(function(){return d})),e.d(r,"r",(function(){return K})),e.d(r,"s",(function(){return s})),e.d(r,"t",(function(){return l})),e.d(r,"u",(function(){return h})),e.d(r,"v",(function(){return x})),e.d(r,"w",(function(){return w})),e.d(r,"x",(function(){return A})),e.d(r,"y",(function(){return z})),e.d(r,"z",(function(){return v})),e.d(r,"A",(function(){return V})),e.d(r,"B",(function(){return D})),e.d(r,"C",(function(){return m})),e.d(r,"D",(function(){return y})),e.d(r,"E",(function(){return p})),e.d(r,"F",(function(){return b})),e.d(r,"G",(function(){return E})),e.d(r,"H",(function(){return g})),e.d(r,"I",(function(){return H})),e.d(r,"J",(function(){return I})),e.d(r,"K",(function(){return j}));var t=e(598),u=e(486);function i(n){return t.a.extendedSpatialReferenceInfo(n)}function c(n,r,e){return t.a.clip(u.a,n,r,e)}function o(n,r,e){return t.a.cut(u.a,n,r,e)}function f(n,r,e){return t.a.contains(u.a,n,r,e)}function a(n,r,e){return t.a.crosses(u.a,n,r,e)}function d(n,r,e,i){return t.a.distance(u.a,n,r,e,i)}function s(n,r,e){return t.a.equals(u.a,n,r,e)}function l(n,r,e){return t.a.intersects(u.a,n,r,e)}function p(n,r,e){return t.a.touches(u.a,n,r,e)}function g(n,r,e){return t.a.within(u.a,n,r,e)}function h(n,r,e){return t.a.disjoint(u.a,n,r,e)}function v(n,r,e){return t.a.overlaps(u.a,n,r,e)}function m(n,r,e,i){return t.a.relate(u.a,n,r,e,i)}function x(n,r){return t.a.isSimple(u.a,n,r)}function y(n,r){return t.a.simplify(u.a,n,r)}function w(n,r){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return t.a.convexHull(u.a,n,r,e)}function A(n,r,e){return t.a.difference(u.a,n,r,e)}function z(n,r,e){return t.a.symmetricDifference(u.a,n,r,e)}function V(n,r,e){return t.a.intersect(u.a,n,r,e)}function b(n,r){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return t.a.union(u.a,n,r,e)}function D(n,r,e,i,c,o,f){return t.a.offset(u.a,n,r,e,i,c,o,f)}function E(n,r,e,i){var c=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return t.a.buffer(u.a,n,r,e,i,c)}function H(n,r,e,i,c,o,f){return t.a.geodesicBuffer(u.a,n,r,e,i,c,o,f)}function I(n,r,e){var i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return t.a.nearestCoordinate(u.a,n,r,e,i)}function j(n,r,e){return t.a.nearestVertex(u.a,n,r,e)}function L(n,r,e,i,c){return t.a.nearestVertices(u.a,n,r,e,i,c)}function R(n,r,e,u){if(null==r||null==u)throw new Error("Illegal Argument Exception");var i=t.a.rotate(r,e,u);return i.spatialReference=n,i}function S(n,r,e){if(null==r||null==e)throw new Error("Illegal Argument Exception");var u=t.a.flipHorizontal(r,e);return u.spatialReference=n,u}function q(n,r,e){if(null==r||null==e)throw new Error("Illegal Argument Exception");var u=t.a.flipVertical(r,e);return u.spatialReference=n,u}function B(n,r,e,i,c){return t.a.generalize(u.a,n,r,e,i,c)}function C(n,r,e,i){return t.a.densify(u.a,n,r,e,i)}function k(n,r,e,i){var c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;return t.a.geodesicDensify(u.a,n,r,e,i,c)}function J(n,r,e){return t.a.planarArea(u.a,n,r,e)}function _(n,r,e){return t.a.planarLength(u.a,n,r,e)}function F(n,r,e,i){return t.a.geodesicArea(u.a,n,r,e,i)}function G(n,r,e,i){return t.a.geodesicLength(u.a,n,r,e,i)}var K=Object.freeze({__proto__:null,extendedSpatialReferenceInfo:i,clip:c,cut:o,contains:f,crosses:a,distance:d,equals:s,intersects:l,touches:p,within:g,disjoint:h,overlaps:v,relate:m,isSimple:x,simplify:y,convexHull:w,difference:A,symmetricDifference:z,intersect:V,union:b,offset:D,buffer:E,geodesicBuffer:H,nearestCoordinate:I,nearestVertex:j,nearestVertices:L,rotate:R,flipHorizontal:S,flipVertical:q,generalize:B,densify:C,geodesicDensify:k,planarArea:J,planarLength:_,geodesicArea:F,geodesicLength:G})},685:function(n,r,e){"use strict";e.r(r);e(598),e(486);var t=e(456);e.d(r,"buffer",(function(){return t.G})),e.d(r,"clip",(function(){return t.n})),e.d(r,"contains",(function(){return t.m})),e.d(r,"convexHull",(function(){return t.w})),e.d(r,"crosses",(function(){return t.o})),e.d(r,"cut",(function(){return t.l})),e.d(r,"densify",(function(){return t.f})),e.d(r,"difference",(function(){return t.x})),e.d(r,"disjoint",(function(){return t.u})),e.d(r,"distance",(function(){return t.q})),e.d(r,"equals",(function(){return t.s})),e.d(r,"extendedSpatialReferenceInfo",(function(){return t.p})),e.d(r,"flipHorizontal",(function(){return t.c})),e.d(r,"flipVertical",(function(){return t.d})),e.d(r,"generalize",(function(){return t.e})),e.d(r,"geodesicArea",(function(){return t.j})),e.d(r,"geodesicBuffer",(function(){return t.I})),e.d(r,"geodesicDensify",(function(){return t.g})),e.d(r,"geodesicLength",(function(){return t.k})),e.d(r,"intersect",(function(){return t.A})),e.d(r,"intersects",(function(){return t.t})),e.d(r,"isSimple",(function(){return t.v})),e.d(r,"nearestCoordinate",(function(){return t.J})),e.d(r,"nearestVertex",(function(){return t.K})),e.d(r,"nearestVertices",(function(){return t.a})),e.d(r,"offset",(function(){return t.B})),e.d(r,"overlaps",(function(){return t.z})),e.d(r,"planarArea",(function(){return t.h})),e.d(r,"planarLength",(function(){return t.i})),e.d(r,"relate",(function(){return t.C})),e.d(r,"rotate",(function(){return t.b})),e.d(r,"simplify",(function(){return t.D})),e.d(r,"symmetricDifference",(function(){return t.y})),e.d(r,"touches",(function(){return t.E})),e.d(r,"union",(function(){return t.F})),e.d(r,"within",(function(){return t.H}))}}]);
//# sourceMappingURL=16.7e3d517a.chunk.js.map