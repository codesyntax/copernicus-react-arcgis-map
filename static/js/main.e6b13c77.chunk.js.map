{"version":3,"sources":["ArcgisMap/MenuContainer.jsx","ArcgisMap/LayerSelector.jsx","ArcgisMap/ArcgisMap.jsx","App.js","reportWebVitals.js","index.js"],"names":["MenuContainer","useState","showMapMenu","setShowMapMenu","menuClass","classNames","className","onClick","style","display","role","id","aria-controls","aria-selected","aria-hidden","LayerSelector","view","title","document","getElementsByClassName","classList","add","ArcgisMap","mapDiv","useRef","useEffect","current","map","Map","basemap","slider","MapView","container","center","zoom","ui","components","console","log","constraints","minZoom","Zoom","position","baseMapNode","createElement","ReactDOM","render","basemapGallery","BasemapGallery","print_button","setAttribute","addEventListener","evt","area_button","legend_button","menuContainerNode","scaleBar","ScaleBar","unit","watch","querySelector","ref","icon","faSpinner","pulse","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"qYAgCeA,MA1Bf,WACI,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACIC,EAAYC,IAAW,mDAAoD,CAC3E,uBAAwBH,EACxB,6BAA8BA,IAGlC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKA,UAAWF,EAAWG,QAAS,kBAAMJ,GAAgBD,MACzDA,EACG,sBAAKI,UAAU,yBAAyBE,MAAO,CAAEC,QAAS,SAA1D,UACI,sBAAKH,UAAU,OAAOI,KAAK,UAA3B,UACI,sBAAMJ,UAAU,mBAAmBK,GAAG,iBAAiBD,KAAK,MAAME,gBAAc,iBAAiBC,gBAAc,OAA/G,mCACA,sBAAMP,UAAU,MAAMK,GAAG,eAAeD,KAAK,MAAME,gBAAc,eAAeC,gBAAc,QAA9F,8BAEJ,sBAAKP,UAAU,SAAf,UACI,qBAAKA,UAAU,uBAAuBK,GAAG,iBAAiBD,KAAK,WAAWI,cAAY,UACtF,qBAAKR,UAAU,QAAQK,GAAG,eAAeD,KAAK,WAAWI,cAAY,OAArE,SAA4E,qBAAKR,UAAU,qBAAf,0CAGlF,OCKHS,IChBXC,EDgBWD,EA3Bf,WACI,MAAsCd,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACIC,EAAYC,IAAW,qEAAsE,CAC7F,wBAAyBH,EACzB,qBAAsBA,IAY1B,OACI,qBACII,UAAWF,EACXO,GAAG,qBACHD,KAAK,SACLO,MAAM,kBACNV,QAAS,WAfVL,GACCgB,SAASC,uBAAuB,wBAAwB,GAAGX,MAAMC,QAAU,OAC3EN,GAAe,KAEfe,SAASC,uBAAuB,wBAAwB,GAAGC,UAAUC,IAAI,6BACzEH,SAASC,uBAAuB,wBAAwB,GAAGX,MAAMC,QAAU,QAC3EN,GAAe,QCuHZmB,MAxHf,WACI,IAAMC,EAASC,iBAAO,MA4GtB,OA3GAC,qBAAU,WAEN,GAAIF,EAAOG,QAAS,CAChB,IAAMC,EAAM,IAAIC,IAAI,CAChBC,QAAS,cACTC,QAAQ,IAYZ,GAVAd,EAAO,IAAIe,IAAQ,CACfC,UAAWT,EAAOG,QAClBC,IAAKA,EACLM,OAAQ,CAAC,GAAI,IACbC,KAAM,EACNC,GAAI,CACAC,WAAY,CAAC,kBAGrBC,QAAQC,IAAItB,GACRA,EAAM,CAENA,EAAKuB,YAAc,CACfC,QAAS,GAEb,IAAIN,EAAO,IAAIO,IAAK,CAChBzB,KAAMA,IAEVA,EAAKmB,GAAGd,IAAIa,EAAM,CACdQ,SAAU,cAMd,IAAMC,EAAczB,SAAS0B,cAAc,OAC3CD,EAAYrC,UAAY,4BAExBuC,IAASC,OACL,cAAC,EAAD,IACAH,GAEJ3B,EAAKmB,GAAGd,IAAIsB,EAAa,aAEzB,IAAMI,EAAiB,IAAIC,IAAe,CACtChC,KAAMA,IAEVA,EAAKmB,GAAGd,IAAI0B,EAAgB,aAG5B,IAAIE,EAAe/B,SAAS0B,cAAc,OAC1CK,EAAa3C,UAAY,qEACzB2C,EAAaC,aAAa,OAAQ,UAClCD,EAAaC,aAAa,QAAS,SACnCD,EAAaE,iBAAiB,SAAS,SAAUC,OAGjDpC,EAAKmB,GAAGd,IAAI4B,EAAc,aAG1B,IAAII,EAAcnC,SAAS0B,cAAc,OACzCS,EAAY/C,UAAY,4EACxB+C,EAAYH,aAAa,OAAQ,UACjCG,EAAYH,aAAa,QAAS,eAClCG,EAAYF,iBAAiB,SAAS,SAAUC,OAGhDpC,EAAKmB,GAAGd,IAAIgC,EAAa,aAGzB,IAAIC,EAAgBpC,SAAS0B,cAAc,OAC3CU,EAAchD,UAAY,oEAC1BgD,EAAcJ,aAAa,OAAQ,UACnCI,EAAcJ,aAAa,QAAS,UACpCI,EAAcH,iBAAiB,SAAS,SAAUC,OAGlDpC,EAAKmB,GAAGd,IAAIiC,EAAe,aAG3B,IAAMC,EAAoBrC,SAAS0B,cAAc,OACjDW,EAAkBjD,UAAY,0BAE9BuC,IAASC,OACL,cAAC,EAAD,IACAS,GAEJvC,EAAKmB,GAAGd,IAAIkC,EAAmB,YAK/B,IAAIC,EAAW,IAAIC,IAAS,CACxBzC,KAAMA,EACN0C,KAAM,SAEV1C,EAAKmB,GAAGd,IAAImC,EAAU,eAGtBxC,EAAK2C,MAAM,YAAY,SAAUP,GAEzBlC,SAAS0C,cAAc,YAAYpD,MAAMC,SADjC,IAAR2C,EACmD,OAEA,cAKpE,IAGC,mCACI,sBAAK9C,UAAU,gBAAf,UACI,qBAAKuD,IAAKtC,EAAQjB,UAAU,QAE5B,sBAAKA,UAAU,UAAf,cAA0B,cAAC,IAAD,CAAiBwD,KAAMC,IAAWC,OAAK,aCvHlEC,MAVf,WACE,OAGM,aAFJ,CAEK,EAAD,KCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,gCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdtB,IAASC,OACP,cAAC,IAAM6B,WAAP,UACE,cAAC,EAAD,MAEFzD,SAAS0D,eAAe,SAM1BV,M","file":"static/js/main.e6b13c77.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"@arcgis/core/assets/esri/css/main.css\";\nimport \"./ArcgisMap.css\";\nimport classNames from 'classnames';\n\n\nfunction MenuContainer () {\n    const [showMapMenu, setShowMapMenu] = useState(false)\n    var menuClass = classNames('esri-widget--button esri-widget esri-interactive', {\n        'esri-icon-left-arrow': showMapMenu,\n        'esri-icon-drag-horizontal': !showMapMenu\n    });\n\n    return (\n        <div className=\"map-left-menu-container esri-component\">\n            <div className={menuClass} onClick={() => setShowMapMenu(!showMapMenu)}></div>\n            {showMapMenu ?\n                <div className=\"map-menu tab-container\" style={{ display: \"block\" }}>\n                    <div className=\"tabs\" role=\"tablist\">\n                        <span className=\"tab tab-selected\" id=\"products_label\" role=\"tab\" aria-controls=\"products_panel\" aria-selected=\"true\">Products and datasets</span>\n                        <span className=\"tab\" id=\"active_label\" role=\"tab\" aria-controls=\"active_panel\" aria-selected=\"false\">Active on map</span>\n                    </div>\n                    <div className=\"panels\">\n                        <div className=\"panel panel-selected\" id=\"products_panel\" role=\"tabpanel\" aria-hidden=\"false\"></div>\n                        <div className=\"panel\" id=\"active_panel\" role=\"tabpanel\" aria-hidden=\"true\"><div className=\"no-active-datasets\">No datasets selected</div></div>\n                    </div>\n                </div>\n                : ''}\n        </div>\n    );\n};\n\nexport default MenuContainer;\n","import React, { useState } from \"react\";\nimport \"@arcgis/core/assets/esri/css/main.css\";\nimport \"./ArcgisMap.css\";\nimport classNames from 'classnames';\n\nfunction LayerSelector() {\n    const [showMapMenu, setShowMapMenu] = useState(false)\n    var menuClass = classNames('esri-icon-basemap esri-widget--button esri-widget esri-interactive', {\n        'esri-icon-right-arrow': showMapMenu,\n        'esri-icon-basemap': !showMapMenu\n    });\n    function openMenu(){\n        if(showMapMenu){\n            document.getElementsByClassName(\"esri-basemap-gallery\")[0].style.display = 'none';\n            setShowMapMenu(false);\n        }else{\n            document.getElementsByClassName(\"esri-basemap-gallery\")[0].classList.add(\"basemap-gallery-container\");\n            document.getElementsByClassName(\"esri-basemap-gallery\")[0].style.display = 'block';\n            setShowMapMenu(true); \n        }\n    };\n    return (\n        <div\n            className={menuClass}\n            id=\"map_basemap_button\"\n            role=\"button\"\n            title=\"Basemap gallery\"\n            onClick={() => openMenu()}>\n        </div>\n    );\n};\n\nexport default LayerSelector;\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport Map from \"@arcgis/core/Map\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport BasemapGallery from \"@arcgis/core/widgets/BasemapGallery\";\nimport Zoom from \"@arcgis/core/widgets/Zoom\";\nimport ScaleBar from \"@arcgis/core/widgets/ScaleBar\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\nimport \"@arcgis/core/assets/esri/css/main.css\";\nimport \"./ArcgisMap.css\";\nimport MenuContainer from \"./MenuContainer\";\nimport LayerSelector from './LayerSelector';\nimport ReactDOM from 'react-dom';\n\n// import classNames from 'classnames';\n\nlet view;\nfunction ArcgisMap() {\n    const mapDiv = useRef(null);\n    useEffect(() => {\n\n        if (mapDiv.current) {\n            const map = new Map({\n                basemap: \"topo-vector\",\n                slider: false\n            });\n            view = new MapView({\n                container: mapDiv.current,\n                map: map,\n                center: [15, 50],\n                zoom: 3,\n                ui: {\n                    components: [\"attribution\"] // removes default widgets except for attribution\n                }\n            });\n            console.log(view)\n            if (view) {\n\n                view.constraints = {\n                    minZoom: 3\n                };\n                var zoom = new Zoom({\n                    view: view\n                });\n                view.ui.add(zoom, {\n                    position: \"top-right\"\n                });\n\n             \n\n                // LAYER SELECTOR\n                const baseMapNode = document.createElement('div')\n                baseMapNode.className = \"basemap-gallery-container\"\n                // Parse React Component to DOM\n                ReactDOM.render(\n                    <LayerSelector/>,\n                    baseMapNode\n                );\n                view.ui.add(baseMapNode, \"top-right\");\n\n                const basemapGallery = new BasemapGallery({\n                    view: view,\n                });\n                view.ui.add(basemapGallery, \"top-right\");\n\n                // Print\n                var print_button = document.createElement('div');\n                print_button.className = \"esri-icon-printer esri-widget--button esri-widget esri-interactive\";\n                print_button.setAttribute(\"role\", \"button\");\n                print_button.setAttribute(\"title\", \"Print\");\n                print_button.addEventListener('click', function (evt) {\n                    // action\n                });\n                view.ui.add(print_button, \"top-right\");\n\n                // Area selection\n                var area_button = document.createElement('div');\n                area_button.className = \"esri-icon-cursor-marquee esri-widget--button esri-widget esri-interactive\";\n                area_button.setAttribute(\"role\", \"button\");\n                area_button.setAttribute(\"title\", \"Select area\");\n                area_button.addEventListener('click', function (evt) {\n                    // action\n                });\n                view.ui.add(area_button, \"top-right\");\n\n                // Legend\n                var legend_button = document.createElement('div');\n                legend_button.className = \"esri-icon-legend esri-widget--button esri-widget esri-interactive\";\n                legend_button.setAttribute(\"role\", \"button\");\n                legend_button.setAttribute(\"title\", \"Legend\");\n                legend_button.addEventListener('click', function (evt) {\n                    // action\n                });\n                view.ui.add(legend_button, \"top-right\");\n\n                // Menu\n                const menuContainerNode = document.createElement('div')\n                menuContainerNode.className = \"map-left-menu-container\"\n                // Parse React Component to DOM\n                ReactDOM.render(\n                    <MenuContainer/>,\n                    menuContainerNode\n                );\n                view.ui.add(menuContainerNode, \"top-left\");\n\n                // loadTestProducts();\n\n                // Scalebar\n                var scaleBar = new ScaleBar({\n                    view: view,\n                    unit: \"dual\"\n                });\n                view.ui.add(scaleBar, \"bottom-left\");\n\n                // Loading icon\n                view.watch('updating', function (evt) {\n                    if (evt === true) {\n                        document.querySelector(\".loading\").style.display = 'flex';\n                    } else {\n                        document.querySelector(\".loading\").style.display = 'none';\n                    }\n                })\n            }\n        };\n    }, []);\n\n    return (\n        <>\n            <div className=\"map-container\">\n                <div ref={mapDiv} className=\"map\">\n                </div>\n                <div className=\"loading\"> <FontAwesomeIcon icon={faSpinner} pulse /></div>\n            </div>\n        </>\n    );\n}\n\nexport default ArcgisMap;\n","import './App.css';\nimport {ArcgisMap} from './ArcgisMap';\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n        <ArcgisMap></ArcgisMap>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}